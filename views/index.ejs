<html>
  <head>
    <meta http-equiv="Content-type" content="text/html; charset=utf-8"/>
    <title>Socket Server</title>
    <script src="/socket.io/socket.io.js"></script>
    <script src="/raphael.min.js"></script>
    <script> 
      var socket = new io.Socket(); 
      socket.on('connect', function() { console.log("Connection to server has been established.") }) 
      socket.on('message', function(message) { updateWorld(message); }) 
      socket.on('disconnect', function() { console.log("The connection has been closed!") }) 
    </script> 
  </head>
  <body>
    <script>
      // Creates canvas 320 Ã— 200 at 10, 50
      var world_size = 1000;
      var paper = Raphael(10, 10, world_size, world_size);
      var c = paper.rect(0, 0, world_size, world_size);
      
      function Monster(name, x, y, direction){
        this.monster_image_width = 30;
        var possible_colors = [
          "#f00",
          "#0f0",
          "#00f",
          "#a00",
          "#0a0",
          "#00a",
          "#800",
          "#080",
          "#008",
          "#600",
          "#060",
          "#006",
          "#400",
          "#040",
          "#004"
        ];
        this.current_x = x;
        this.current_y = y;
        this.current_direction = direction;
        this.monster_set = paper.set();
        this.name = name;
        this.color = possible_colors[Math.random(possible_colors.length)];
        
        
        /// moving
        
        this.move = function(x, y, direction) {
          // this.draw_path(x,y,direction);
          this.animate_monster(x,y,direction);
          this.set_current_values(x,y,direction);
          console.log(this.name + " moved to "+this.current_x+"/"+this.current_y+" and looking to "+this.current_direction);
        }
        
        this.draw_path = function(x,y,direction) {
          var path_to_animate_along = paper.path("M"+this.current_x+" "+this.current_y+"L"+x+" "+y);
        }
        
        this.animate_monster = function(x,y,direction) {
          if(this.current_direction!=direction) {
            this.monster_img.rotate(direction);
            this.monster_bg.rotate(direction);
          }
          this.monster_img.animate({x:(x-(this.monster_image_width/2)), y:(y-(this.monster_image_width/2))}, 100);
          this.monster_name.animate({x:x, y:y}, 100);
          this.monster_bg.animate({x:x-(16/2), y:y-(24/2)}, 100);
        }
        
        this.set_current_values = function(x,y,direction) {
          this.current_x = x;
          this.current_y = y;
          this.current_direction = direction;
        }
        
        
        // initialization
        
        this.init_monster_bg = function() {
          this.monster_bg = paper.rect(this.current_x-(this.monster_image_width/2)-10, this.current_y-(this.monster_image_width/2)-12, 20, 24);
          this.monster_bg.attr("fill", "red");
          this.monster_bg.attr("stroke", "white");
          this.monster_bg.rotate(this.current_direction);
        }
        
        this.init_monster_img = function() {
          this.monster_img = paper.image("panzer.png", this.current_x-(this.monster_image_width/2), this.current_y-(this.monster_image_width/2), this.monster_image_width, this.monster_image_width);
          this.monster_img.rotate(this.current_direction);
        }
        
        this.init_monster_name = function() {
          this.monster_name = paper.text(this.current_x, this.current_y, this.name);
          this.monster_name.rotate(this.current_direction);
          this.monster_name.attr("fill", this.color);
          this.monster_name.attr("font", '14px "Arial"');
        }
        
        this.initial_draw = function() {
          this.init_monster_bg();
          this.init_monster_img();
          this.init_monster_name();
          this.move(this.current_x, this.current_y, this.current_direction);
        }
        
        
        this.initial_draw();
      }
      
      //monster = new Monster("Andi", 50, 50, Raphael.rad(90));
      //monster.move(100,100, Raphael.rad(180));
      socket.connect();
      
      var active_players = {};
      
      function updateWorld(message) {
        message.players.forEach(function (player){
          if(!active_players[player.id]){
            active_players[player.id] = new Monster(player.name, player.position.x, player.position.y, Raphael.deg(player.direction) + 90);
          } else {
            active_players[player.id].move(player.position.x, player.position.y, Raphael.deg(player.direction) + 90);
            // console.log(player.direction);
          }
        });
      }
    </script>
  </body>
</html>
